# YAML configuration file for the Render Controller server


# Prerequisites
# SSH
# Render controller uses SSH to communicate with render nodes.  You must configure
# your render nodes with SSH keys so that the server is able to log in without a
# password. If you are attempting to access nodes outside of your local network,
# you may also need to configure firewall rules to allow incoming SSH connections
# from the server. It's not a bad idea to create a new user specifically for this
# purpose, and you can restrict its permissions to only what is necessary to start
# and kill render processes.
# 
# Shared filesystem
# The server also expects the render project files to be located in the same location
# on every node.  The server has no file handling capabilities of it's own, so it is
# assumed that you will use some kind of shared storage between the render nodes.
# Although shared storage is not strictly required, if you choose not to use it you
# will have to manually place project files on each node and retrieve the rendered
# frames when they're done.  The file browser in the web UI also accesses the local
# filesystem on the *server*, not the user's local machine, so you will have to
# synchronize that as well.  It is far easier to just use a shared filesystem of some
# kind mounted in the same location on every node.  Since we're already using SSH for
# the render processes, SSHFS is a simple and effection option, but any network
# filesystem will do.

# Server listen address
listen_addr: localhost

# Server listen port
listen_port: 2020

# Web UI origin string
# Must match Origin header sent with API requests from web UI
cors_origin: "http://localhost:3000"

# Automatically start rendering next job in queue when preceding one
# finishes. This sets the default state on startup, but users can
# override it from the web UI or REST API while the server is running.
autostart: True

# Server log verbosity. Can be "everything", "debug", "info", "warning".
# "everything" is the same as "debug", except it will also log the raw
# STDOUT received from render engines.
log_level: info

# Server log file location.
log_file_path: /var/log/rendercontroller.log

# Directory where server may store state files and other data.
# Must be writable by the server process.
work_dir: /var/rendercontroller

# File browser base directory. This is the toplevel directory on shared
# storage below which all render project files are stored. The server is
# not allowed to access anything on the filesystem outside this directory.
file_browser_base_dir: /mnt/share

# List of all render nodes
# RenderController uses SSH to reach render nodes, so the names below must be
# valid hostnames as configured in ~/.ssh/conifg with SSH keys so the server
# can log in without a password (see Prerequisites above for more info).
render_nodes:
  - linux_node_1 
  - linux_node_2 
  - linux_node_3 
  - linux_node_4 
  - linux_node_5 
  - mac_node_1 
  - mac_node_2 
  - mac_node_3 


# Render nodes running Mac OSX
# This is so that the server can use the correct path to the render engine executable
macs:
  - mac_node_1
  - mac_node_2
  - mac_node_3


# Path to render software executables
blenderpath_mac: /Applications/blender.app/Contents/MacOS/Blender
blenderpath_linux: /usr/local/bin/blender
terragenpath_mac: '/Applications/Terragen\ 3.app/Contents/MacOS/Terragen\ 3'
terragenpath_linux: /usr/local/bin/terragen
