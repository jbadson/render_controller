#!/usr/bin/env python
#This is a script to simplify launching the render controller from the command line
#import subprocess
from subprocess import call, Popen, PIPE
from time import strftime
from os import path

#if firstwrite == true, print header information before error line
firstwrite = True

#check that paths exist
log_dir_path = '/mnt/data/renderlogs/'

if not path.exists(log_dir_path):
    if raw_input('Path to renderlog directory not found. '
                    + 'Specify manually? (Y/n):') == 'Y':
        log_dir_path = raw_input('Path to renderlog directory: ')
        #append trailing slash if it's not there
        if log_dir_path[-1] != '/':
            log_dir_path += '/'
        if not path.exists(log_dir_path):
            print('Path not found')
            quit()
    else:
        quit()

controllerpath = '/mnt/data/script/render_controller/controller_test.py'

if not path.exists(controllerpath):
    if raw_input('Render controller not found. Specify manually? '
                    + '(Y/n):') == 'Y':
        controllerpath = raw_input('Path to renderlog directory: ')
        if not path.exists(controllerpath):
            print('Render controller not found')
            quit()
    else:
        quit()

log_suffix = strftime('%Y-%m-%d_%H%M')
logpath = log_dir_path + '/errorlog_' + log_suffix + '.txt'
timestart = strftime('%c')
controller = Popen('python ' + controllerpath, 
    shell=True, stderr=PIPE)


def check_first(firstwrite):
    '''write header info if this is the first line received from stderr'''
    if firstwrite == True:
        timestamp = strftime('%c')
        print('Error detected on ' + timestamp +'.\n' +
            'Writing logfile at ' + logpath)
        call('echo "Render controller started on ' + timestart +
            '.\nError detected on '+ timestamp +'.\n\n" >> ' + logpath, shell=True)
        return False
    else:
        return False




print('Render controller started on ' + timestart)

for line in iter(controller.stderr.readline, ''):
    if line:
        firstwrite = check_first(firstwrite)
        print(line)
        call('echo "' + line + '" >> ' + logpath, shell=True)


quit()
